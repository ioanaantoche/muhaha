package ro.pub.cti.remotenao;

import java.io.File;
import java.io.IOException;
import java.util.Properties;

import com.jcraft.jsch.JSch;
import com.jcraft.jsch.JSchException;
import com.jcraft.jsch.Session;
import com.jcraft.jsch.UserInfo;

public class SshConnection {
	public String user;
	public String host;
	public String password;

	private JSch jsch;
	private Properties properties;

	private final int PORT = 22;

	public SshConnection(String user, String host, String password) {
		this.user = user;
		this.host = host;
		this.password = password;
		this.jsch = new JSch();
		this.properties = new Properties();
		properties.put("StrictHostKeyChecking", "ask");
		properties.put("HashKnownHosts", "yes");
		/*HostKeyRepository hkr =jsch.getHostKeyRepository();
		HostKey []hk = hkr.getHostKey();
		if (hk == null) {
			System.out.println(".....hhhhhhh");
		} else {
			System.out.println(hk[0] + " ana");
		}*/
		
		try {
			File f = new File("keys");
			boolean b = f.createNewFile();
			jsch.addIdentity("keys");
		} catch (JSchException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public void connect() throws JSchException {
		Session session = jsch.getSession(user, host, PORT);
		
		session.setUserInfo(new UserInfo() {
			@Override
			public String getPassphrase() {
				return null;
			}

			@Override
			public String getPassword() {
				return password;
			}

			@Override
			public boolean promptPassword(String message) {
				return true;
			}

			@Override
			public boolean promptPassphrase(String message) {
				return true;
			}

			@Override
			public boolean promptYesNo(String message) {
				return true;
			}

			@Override
			public void showMessage(String message) {
			}
		});

		session.setPassword(password);
		session.setConfig(properties);
		session.connect();
		
		
		
	}

}
